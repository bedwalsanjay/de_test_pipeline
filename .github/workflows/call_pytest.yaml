name: Pytest Test

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment"
        type: string
        required: false
        default: "development"
      test-report:
        description: "Generate test report?"
        type: boolean
        required: false
        default: false
      coverage-report:
        description: "Generate coverage report?"
        type: boolean
        required: false
        default: false
      coverage-thresholds:
        description: "Coverage thresholds ('min max')"
        type: string
        required: false
        default: "60 80"
      coverage-badge:
        description: "Generate a coverage badge"
        type: boolean
        required: false
        default: false
      package-list:
        description: "List of packages to be installed"
        type: string
        required: false
      python-version:
        description: "Python version to use"
        type: string
        required: false
        default: "3.8"  # Change to your desired Python version
      runner-labels:
        description: "Labels to use for the GitHub Runners"
        type: string
        required: false
        default: eks-runners

jobs:
  pytest-test:
    name: Pytest Test
    runs-on: ${{ inputs.runner-labels }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install Dependencies
        run: pip install pytest pytest-md pytest-emoji
        working-directory: ${{ github.workspace }}

      - name: Run pytest
        uses: pavelzw/pytest-action@v2
        with:
          verbose: true
          emoji: true
          job-summary: true
          custom-arguments: '-q'
          click-to-expand: true
          report-title: 'Test Report'

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/cobertura-coverage.xml
          badge: ${{ inputs.coverage-badge }}
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both


